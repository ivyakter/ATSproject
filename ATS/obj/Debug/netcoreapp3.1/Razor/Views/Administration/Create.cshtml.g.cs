#pragma checksum "D:\TFS-Gov\ATS_Government Project\ATS\Views\Administration\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "e009435bda56374b413841a6c73b7d867a5abc02"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Administration_Create), @"mvc.1.0.view", @"/Views/Administration/Create.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\TFS-Gov\ATS_Government Project\ATS\Views\_ViewImports.cshtml"
using ATS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\TFS-Gov\ATS_Government Project\ATS\Views\_ViewImports.cshtml"
using ATS.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e009435bda56374b413841a6c73b7d867a5abc02", @"/Views/Administration/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ab70b513d5bb9477a881e9ef4fc41a570a926f05", @"/Views/_ViewImports.cshtml")]
    public class Views_Administration_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Dashboard", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("role in RoleList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("role.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":key", new global::Microsoft.AspNetCore.Html.HtmlString("role.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("v-for", new global::Microsoft.AspNetCore.Html.HtmlString("audit in AuditList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":value", new global::Microsoft.AspNetCore.Html.HtmlString("audit.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute(":key", new global::Microsoft.AspNetCore.Html.HtmlString("audit.id"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Vue-Controllers/Administratio.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\TFS-Gov\ATS_Government Project\ATS\Views\Administration\Create.cshtml"
  
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/Admin/_AdminLayout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<style>
    .text-danger .form-control {
        border: 1px solid #ff0000;
    }
</style>

<div id=""Administration"">
    <div class=""page-breadcrumb mb-5 bg-location"">
        <div class=""row"">
            <div class=""col-12 d-flex no-block align-items-center"">
                <h4 class=""page-title"">Dashboard</h4>
                <div class=""ml-auto text-right"">
                    <nav aria-label=""breadcrumb"">
                        <ol class=""breadcrumb"">
                            <li class=""breadcrumb-item"">");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc027837", async() => {
                WriteLiteral("Dashboard");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"</li>
                            <li class=""breadcrumb-item active"" aria-current=""page"">Division</li>
                        </ol>
                    </nav>
                </div>
            </div>
        </div>
    </div>

    <div class=""row"">
        <div class=""col-lg-5"">

            <div class=""card"">
                <div class=""card-header"">
                    Create User

                </div>

                <div class=""card-body"">
                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc029704", async() => {
                WriteLiteral(@"
                        <div class=""row"">

                            <div class=""col-md-6"" v-bind:class=""[ClassName]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">User Name  </label> <span class=""ster""> * </span>
                                    <input type=""text"" class=""form-control"" v-model=""UserData.name"" v-on:Change=""NameTextBoxOnChange()"" ");
                WriteLiteral(@"@keyup=""NameTextBoxKeyup()"">
                                    <span style=""color:#ff0000"">{{messageName}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"" v-bind:class=""[ClassemployeeId]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">Employee ID </label> <span class=""ster""> * </span>
                                    <input type=""text"" class=""form-control"" v-model=""UserData.employeeId"" v-on:Change=""EmployeeIdTextBoxOnChange()"" ");
                WriteLiteral(@"@keyup=""EmployeeIdTextBoxKeyup()"">
                                    <span style=""color:#ff0000"">{{messageemployeeId}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">First Designatione </label>
                                    <input type=""text"" class=""form-control"" v-model=""UserData.firstDesignation"">
                                </div>
                            </div>

                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">Current Designation </label>
                                    <input type=""text"" class=""form-control"" v-model=""UserData.currentDesignation"">
                                </div>
                            </div>

               ");
                WriteLiteral(@"             <div class=""col-md-6"" v-bind:class=""[Classemail]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1""> Email </label> <span class=""ster""> * </span>
                                    <input type=""email"" class=""form-control"" v-model=""UserData.email"" v-on:Change=""EmailTextBoxOnChange()"" ");
                WriteLiteral(@"@keyup=""EmailTextBoxKeyup()"">
                                    <span style=""color:#ff0000"">{{messageemail}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"" v-bind:class=""[ClassjoiningDate]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1""> Joining Date </label> <span class=""ster""> * </span>
                                    <input type=""date"" class=""form-control"" v-model=""UserData.joiningDate"" v-on:Change=""JoiningDateTextBoxOnChange()"" ");
                WriteLiteral(@"@keyup=""JoiningDateTextBoxKeyup()"">
                                    <span style=""color:#ff0000"">{{messagejoiningDate}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"" v-bind:class=""[ClassdateofBirth]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1""> Date of Birth </label> <span class=""ster""> * </span>
                                    <input type=""date"" class=""form-control"" v-model=""UserData.dateofBirth"" v-on:Change=""DateofBirthTextBoxOnChange()"" ");
                WriteLiteral(@"@keyup=""DateofBirthTextBoxKeyup()"">
                                    <span style=""color:#ff0000"">{{messagedateofBirth}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"" v-bind:class=""[ClassmobileNo]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1""> Phone No </label> <span class=""ster""> * </span>
                                    <input type=""number"" class=""form-control"" v-model=""UserData.mobileNo""  v-on:Change=""MobileTextBoxOnChange()"" ");
                WriteLiteral("@keyup=\"MobileTextBoxKeyup()\">\r\n                                    <span style=\"color:#ff0000\">{{messagemobileNo}}</span>\r\n                                </div>\r\n                            </div>\r\n");
                WriteLiteral(@"
                            <div class=""col-md-6"" v-bind:class=""[ClassuserTypeId]"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1""> User Type </label> <span class=""ster""> * </span>
                                    <select class=""form-control"" v-model=""UserData.userTypeId"" v-on:change=""hidediv(UserData.userTypeId),userTypeIdOnchange(UserData.userTypeId)"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc0215414", async() => {
                    WriteLiteral(" Select User Type");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc0216689", async() => {
                    WriteLiteral("{{role.name}}");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                    <span style=""color:#ff0000"">{{messageuserTypeId}}</span>
                                </div>
                            </div>

                            <div class=""col-md-6"" v-show=""Isauditsection"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">Audit Department</label>
                                    <select class=""form-control"" v-model=""UserData.auditId"">
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc0218566", async() => {
                    WriteLiteral(" Select Audit Department");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc0219848", async() => {
                    WriteLiteral("{{audit.name}}");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </select>
                                </div>
                            </div>





                            <div class=""col-md-6"">
                                <div class=""form-group"">
                                    <label for=""exampleInputEmail1"">Workplace </label>
                                    <input type=""text"" class=""form-control"" v-model=""UserData.workplace"">
                                </div>
                            </div>

                        </div>

                        <div class=""text-center"">
                            <button type=""button"" class=""btn btn-success mr-5"" ");
                WriteLiteral("@click=\"UserCreate()\" v-show=\"IsShowUser\">Save</button>\r\n                            <button type=\"button\" class=\"btn btn-primary\" ");
                WriteLiteral("@click=\"update()\" v-show=\"!IsShowUser\">Update</button>\r\n                            <button type=\"button\" class=\"btn btn-danger\" ");
                WriteLiteral("@click=\"Cancel\" v-show=\"IsShowCancel\">Cancel</button>\r\n                        </div>\r\n                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"

                </div>
            </div>

            <div class=""ValidationMessage"" v-show=""isMassageuser"">
                <div class=""alert"" role=""alert"" v-bind:class=""[ClassStatus]"">
                    {{errorMassage}}
                </div>
            </div>
        </div>
        
        <!-- Large modal -->
       
        <div class=""modal fade view-user""  tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalCenterTitle"" aria-hidden=""true"">
            <div class=""modal-dialog modal-dialog-centered"" role=""document"">
                <div class=""modal-content"">
                    <div class=""modal-header"">
                        <h4 class=""modal-title text-info""> <b> {{ViewUserData.name}} Details Information </b>  </h4>
                        <button type=""button"" class=""close text-danger"" data-dismiss=""modal"" aria-label=""Close"">
                            <span aria-hidden=""true"">&times;</span>
                        </button>
                    </div>
           ");
            WriteLiteral(@"         <div class=""modal-body view-user-info"">
                        <ul>
                         
                            <li> <b> Employee Id :</b> {{ViewUserData.employeeId}}</li>
                            <li> <b> user Type:</b> {{ViewUserData.rolename}}</li>
                            <li> <b> Joining Date:</b> {{ViewUserData.joiningDate}}</li>
                            <li> <b> Workplace:</b> {{ViewUserData.workplace}}</li>
                            <li> <b> mobileNo :</b> {{ViewUserData.mobileNo}}</li>
                            <li> <b> Email :</b> {{ViewUserData.email}}</li>
                            <li> <b> Date of Birth :</b> {{ViewUserData.dateofBirth}}</li>
                            <li> <b> First Designation :</b> {{ViewUserData.firstDesignation}}</li>
                            <li> <b> Current Designation :</b> {{ViewUserData.currentDesignation}}</li>
                            <li v-if=""ViewUserData.activeStatus==true""> <b> Active Status :</b> Active</li>
");
            WriteLiteral(@"                            <li v-if=""ViewUserData.activeStatus==false""> <b> Active Status :</b>  In-Active</li>

                        </ul>
                    </div>
                </div>
            </div>
        </div>








        <div class=""col-lg-7"">
            <div class=""card"">
                <div class=""card-header d-flex justify-content-between"">

                    <div class=""float-left""> User List</div>
                    <div class=""float-right "">
                        <div class=""input-group"">
                            <div class=""input-group-append"">
                                <span class=""input-group-text"" id=""basic-addon2""> <i class=""fas fa-search""></i> </span>
                            </div>
                            <input type=""search"" v-model=""search"" class=""form-control"" placeholder=""Search By Name"" autocomplete=""off"">
                        </div>


                    </div>

                </div>


                <div c");
            WriteLiteral(@"lass=""card-body"">

                    <table class=""table"">
                        <thead>
                            <tr>
                                <th scope=""col"">SL</th>
                                <th scope=""col"">Name </th>
                                <th scope=""col"">Mobile </th>
                                <th scope=""col"">Role </th>
                                <th scope=""col""> Action</th>

                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for=""(userdata, index) in FilterByUserList"">
                                <td>{{index+1}}</td>
                                <td> {{userdata.name}} </td>
                                <td> {{userdata.mobileNo}} </td>
                                <td> {{userdata.rolename}} </td>
                                <td>

                                    <button type=""button"" class=""btn btn-info btn-sm"" ");
            WriteLiteral("@click=\"UserEdit(userdata.id)\">Edit</button>\r\n                                    <button type=\"button\" class=\"btn btn-secondary btn-sm\" ");
            WriteLiteral("@click=\"ViewUser(userdata.id)\"  data-toggle=\"modal\" data-target=\".view-user\">View</button>\r\n                                    <button type=\"button\" class=\"btn btn-danger btn-sm\" ");
            WriteLiteral(@"@click=""UserDelete(userdata.id)"">Delete</button>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>


            </div>
        </div>


    </div>

</div>

");
            DefineSection("AdminAuthorigationjs", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "e009435bda56374b413841a6c73b7d867a5abc0228377", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
